{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gourab\\\\Documents\\\\frontEnd\\\\quizapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const questions = [{\n    questionText: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../memes/bhopendra jogi.jpg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 21\n    }, this),\n    answerOptions: [{\n      answerText: \"Kalia\",\n      isCorrect: false\n    }, {\n      answerText: \"Guddu Bhaiya\",\n      isCorrect: false\n    }, {\n      answerText: \"Bhupendra Jogi\",\n      isCorrect: true\n    }, {\n      answerText: \"Deepak Kalal\",\n      isCorrect: false\n    }]\n  }, {\n    questionText: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../memes/phir hera pheri.jpg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this),\n    answerOptions: [{\n      answerText: \"Bohot Maza\",\n      isCorrect: false\n    }, {\n      answerText: \"Maza\",\n      isCorrect: true\n    }, {\n      answerText: \"Fategi\",\n      isCorrect: false\n    }, {\n      answerText: \"Saza\",\n      isCorrect: false\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const correct = isCorrect => {\n    if (isCorrect === true) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (currentQuestion < data.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"Your score is \", score, \" out of \", data.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-count\",\n        children: data[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: data[currentQuestion].answerOptions.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => correct(answer.isCorrect),\n          children: answer.answerText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 18\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","questions","questionText","src","fileName","_jsxFileName","lineNumber","columnNumber","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","correct","nextQuestion","data","length","className","children","question","map","answer","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gourab/Documents/frontEnd/quizapp/src/App.js"],"sourcesContent":["import React , {useState} from \"react\";\n\nfunction App() {\n\n  const questions = [\n    {\n      questionText: <img src=\"../memes/bhopendra jogi.jpg\" />,\n      answerOptions: [\n        {answerText: \"Kalia\", isCorrect: false},\n        {answerText: \"Guddu Bhaiya\", isCorrect: false},\n        {answerText: \"Bhupendra Jogi\", isCorrect: true},\n        {answerText: \"Deepak Kalal\", isCorrect: false}\n      ]\n    },\n    {\n      questionText: <img src=\"../memes/phir hera pheri.jpg\" />,\n      answerOptions: [\n        {answerText: \"Bohot Maza\", isCorrect: false},\n        {answerText: \"Maza\", isCorrect: true},\n        {answerText: \"Fategi\", isCorrect: false},\n        {answerText: \"Saza\", isCorrect: false}\n      ]\n    },\n  ]\n\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n\n  const [showScore, setShowScore] = useState(false)\n\n  const [score, setScore] = useState(0)\n\n  const correct = (isCorrect) =>{\n    if ( isCorrect === true ){\n      setScore(score+1)\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (currentQuestion < data.length){\n      setCurrentQuestion(nextQuestion)\n    }else{\n      setShowScore(true)\n    }\n  }\n\n\n  return (\n    <div className=\"app\">\n      { showScore ? (<div className='score-section'>Your score is {score} out of {data.length}</div>) : \n         <div className=\"question-section\">\n           <div className=\"question-count\">{data[currentQuestion].question}</div>\n           <div className=\"answer-section\">{data[currentQuestion].answerOptions.map((answer)=>(\n                 <button onClick={()=>correct(answer.isCorrect)}>{answer.answerText}</button>)\n           )}\n            </div>\n         </div>\n      }\n      \n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}